# Spring Boot íê²½ì¤ì íë íì¼ (DB, Tomcat ë±)

#Tomcat Server Port ë³ê²½
server.port=8081

# Context Path ìì  -> 
# Context Pathë¥¼ ìì íì§ ìì¼ë©´ ê¸°ë³¸ Context Path -> /
# Context path -> /boot
server.servlet.context-path=/boot

# DB ì¤ì 
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/com
spring.datasource.username=com
spring.datasource.password=com01

# Spring JPA ì¤ì  (JDBC -> API) -> Hibernate(Spring JPA êµ¬íì²´)
# Springììë Mapper Interface -> SqlSessionFactoryBeanì´ 
# Spring JPAììë Hibernate : SQL Query ë¹ë (ìëìì±)
# ì¬ì©ìì
# Jpaí´ëì¤.save(vo) -> insert into Board(title, content, writer)
#					  values(#{title}, #{content}, #{writer})
# ë³µì¡í ì¿¼ë¦¬ë ì§ì  ì§ì¼íì§ë§ ê°ë¨í sqlë¬¸ì ììì ìì±í´ì¤

# JPA/Hibernate -> ORM (Object Relational Mapping) - ê°ì²´ ê´ê³ ë§µí

# JPA
# MySQL 상세지정 
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 스키마 생성(create, update)
spring.jpa.hibernate.ddl-auto=update
# 처음 만들 떄 create, 만들고 난 후에는 update로 수정
# íì´ë¸ ìì± í create -> update ë¡ ë°ê¿ì¤ ê²
# JPA가 실행하고 실행된 SQL문장보기
spring.jpa.show-sql=true
# 실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true











